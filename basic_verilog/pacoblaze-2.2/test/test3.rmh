/* Symbol Table */
// _loop = LABEL: 7
// binary = CONSTANT: 9
// character = CONSTANT: 97
// decimal = CONSTANT: 123
// func = LABEL: 14
// hexadecimal = CONSTANT: 202
// ic = REGISTER: 21
// int = LABEL: 1023
// isr = LABEL: 17
// loop = LABEL: 7
// loop_1 = LABEL: 11
// octal = CONSTANT: 63
// r0 = REGISTER: 0
// r1 = REGISTER: 1
// s0 = REGISTER: 0
// s1 = REGISTER: 1
// s2 = REGISTER: 2
// s3 = REGISTER: 3
// s4 = REGISTER: 4
// s5 = REGISTER: 5
// s6 = REGISTER: 6
// s7 = REGISTER: 7
// s8 = REGISTER: 8
// s9 = REGISTER: 9
// sA = REGISTER: 10
// sB = REGISTER: 11
// sC = REGISTER: 12
// sD = REGISTER: 13
// sE = REGISTER: 14
// sF = REGISTER: 15
// start = LABEL: 0

/* Program Code */
// #1: ; test3.psm
// #3: register(r0,0) ; register 0
// #4: register(r1,1) ; register 1
// #5: register(ic,21) ; isr register
// #7: constant(binary,9) ; binary value
// #8: constant(octal,63) ; octal value
// #9: constant(decimal,123) ; decimal value
// #10: constant(hexadecimal,202) ; hexadecimal value
// #11: constant(character,97) ; character value
// @000 #14: [start]
00009 // @000 #15: load(r0,binary)
001fe // @001 #16: load(r1,254)
01500 // @002 #17: load(ic,0)
00200 // @003 #19: load(s2,0)
19200 // @004 #20: add(s2,r0)
1b210 // @005 #21: addcy(s2,r1)
3c001 // @006 #22: interrupt(enable)
// @007 #24: [loop] ; first name
// @007 #25: [_loop]
01320 // @007 #26: load(s3,s2) ; load it
1e301 // @008 #27: subcy(s3,1)
3580b // @009 #28: jump(c,loop_1)
2020a // @00a #29: srx(s2)
// @00b #31: [loop_1]
20304 // @00b #31: slx(s3)
3000e // @00c #32: call(func)
34007 // @00d #33: jump(loop)
// @00e #35: [func] ; function
180ca // @00e #36: add(s0,hexadecimal)
1e07b // @00f #37: subcy(s0,decimal)
2a000 // @010 #38: return
// @011 #40: [isr]
19501 // @011 #41: add(ic,1)
38001 // @012 #42: returni(enable)
// @013 #44: [int]
@3ff // #44: address(1023)
34011 // @3ff #45: jump(isr)
